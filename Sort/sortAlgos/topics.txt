REFACTORING:
============

- Schriftgröße:
	Window -> Preferences -> General -> Appearance: Java -> Java Editor Text Font
	
- Fenster groß:
	Doppelklick auf Tab

- Correct Indentation:
	Strg+I (Kontextmenü -> Source -> Correct Indentation)
	
- Importe verwalten:
	Strg+Shift+O (Source -> Organize Imports)
	
- Methode extrahieren:
	Alt+Shift+M (Refactor -> Extract Method...) 
	[erzeuge swap()]
	[erzeuge printArray() von System.out.println(Arrays.toString(arr));]
	
- Auto-Completion: System.out.println
	Syso+Strg+Leer
	[Überschrift für Ausgabe in jeweiliger Sortier-Methode 
		(z.B. System.out.println("Insertionsorted);)]
	
- Kopieren und Verschieben:
	Strg+Alt+Pfeil oben/unten, Alt+Pfeil oben/unten
	[printArray() und Überschrift kopieren und an den Anfang der Methode verschieben]
	
- Auto-Completion: generell
	Strg+Leer
	[erzeuge neue Objekt-Instanz in Main-Klasse mit new Bubble & Strg+Leer]
	
- Typ-Vervollständigung mit Camel Case:
	BubbleSort -> BS, InsertionSort -> IS
	[erzeuge neue Objekt-Instanz in Main-Klasse mit new BS & Strg+Leer]
	
- Lokale Variablen extrahieren:
	Alt+Shift+L (Refactor -> Extract Local Variable...)
	[Main.java: lokale Variable für neue Instanz generieren lassen]
	
- Konstante extrahieren:
	Refactor -> Extract Constant...
	[Main.java: Text aus Überschrift in Konstante extrahieren ("BubbleSorted") mit Alt+Shift+Pfeil & Alt+T]
	
- Groß-/Kleinschreibung:
	Strg+Shift+X (GroßSchreibung), Strg+Shift+Y (Kleinschreibung)
	[Main.java: Text aus Konstante groß/klein schreiben; auch für Variablen-Namen zeigen]
	
- Umbenennen:
	Alt+Shift+R (Refactor -> Rename...)
	[Variablenname ändern von Konstante mit Verändern der Groß-/Kleinschreibung]
	
- Eigene Tastenkombnationen (z.B. für get-/set-Methoden)
	Window -> Preferences: General -> Keys: Getter in Filter eintragen 
	Strg+Alt+Shift+G als Binding, Editing Java Source bei When
	Apply -> OK
	[Feld einführen in InsertionSort.java -> getter und setter generieren lassen]
	


FALLS ZEIT IST:
===============

?- Typ-Hierarchie anzeigen:
	Strg+T (Navigate -> Quick Type Hierarchy)
	[Anzeigen der neuen Typhierarchie am Beispiel von BubbleSort.java]
	
?- Call-/Callee-Hierarchie analysieren:
	Strg+Alt+H (Navigate -> Open Call Hierarchy)
	[Aufurfer von swap() zeigen; ebenso von sort() und alle weiteren Aufrufer]
	[Am Beispiel von sort() die aufgefufenen Methoden zeigen]	
	


DEBUGGING:
==========
	
- Ein-/Auskommentieren:
	Strg+/ (Source -> Toggle Comment)
	
- Breakpoints:
	[Breakpoint setzen an Stelle wo Exception fliegt -> Debugger starten und in jedem Schleifen-Durchlauf anhalten -> langwierig]
	
- Exception Breakpoints & Inspect:
	Breakpoint-View -> Add J -> AIOOB (ArrayIndexOutOfBoundsException) -> Save
	[Einfügen von ArrayIndexOutOfBoundsException über a) Exception in Console oder b) über Breakpoint-View]
	[Laufen lassen -> Inspect (Strg+Shift+I oder Kontextmenü -> Inspect)]
	[Code abändern -> Speichern -> Sprung zurück]

- Drop To Frame:
	[manuell zu vorheriger Methode zurückspringen]
	
- Conditional Breakpoints:
	[j == 0 in Expression if(arr[j] > arr[j + 1])]
	[Watch arr]
	
	
	
	
	
	
FALLS NOCH MEHR ZEIT IST:
=========================

?- Typ-Hierarchie anzeigen:
	Strg+T (Navigate -> Quick Type Hierarchy)
	[Anzeigen der neuen Typhierarchie am Beispiel von BubbleSort.java]
	
?- Call-/Callee-Hierarchie analysieren:
	Strg+Alt+H (Navigate -> Open Call Hierarchy)
	[Aufurfer von swap() zeigen; ebenso von sort() und alle weiteren Aufrufer]
	[Am Beispiel von sort() die aufgefufenen Methoden zeigen]
	
	
		
?- Methoden in Superklasse verschieben:
	Refactor -> Pull up...
	[beide swap()-Methoden in Superklasse verschieben lassen]
		
?- Extract Class:
	Kontextmenü -> Refactor -> Extract Class...
	[insertionSort() -> InsertionSort; bubbleSort() -> BubbleSort]
	
???- Umbenennen:
	Alt+Shift+R (Refactor -> Rename...)
	[insetionSort() -> sort()]
	
?- Extract SuperClass:
	Refactor -> Extract Superclass...
	[sort() aus InsertionSort.java in Superklasse Sorting.java deklarieren (abstract)]
	[sort() in BubbleSort.java einfügen lassen]
	
?- Verschieben:
	Alt+Pfeil oben/unten
	[Code in bubbleSort() markieren und nach sort() verschieben]
	
???- Typ-Hierarchie anzeigen:
	Strg+T (Navigate -> Quick Type Hierarchy)
	[Anzeigen der neuen Typhierarchie am Beispiel von BubbleSort.java]
	
?- Methoden in Superklasse verschieben:
	Refactor -> Pull up...
	[beide swap()-Methoden in Superklasse verschieben lassen]
	
?- Call-/Callee-Hierarchie analysieren:
	Strg+Alt+H (Navigate -> Open Call Hierarchy)
	[Aufurfer von swap() zeigen; ebenso von sort() und alle weiteren Aufrufer]
	[Am Beispiel von sort() die aufgefufenen Methoden zeigen]
	
	
